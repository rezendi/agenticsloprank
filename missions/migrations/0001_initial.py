# Generated by Django 4.2.15 on 2024-12-02 22:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import encrypted_model_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (-1, 'Inactive')], default=0)),
                ('privacy', models.IntegerField(choices=[(0, 'Public Reports'), (1, 'Private Reports')], default=1)),
                ('git_handle', models.CharField(blank=True, max_length=256, null=True)),
                ('email_suffix', models.CharField(blank=True, max_length=256, null=True)),
                ('authorized', models.JSONField(blank=True, default=dict, null=True)),
                ('stripe_info', models.JSONField(blank=True, default=dict, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=256, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('vendor', models.CharField(blank=True, max_length=64, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.customer')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'Created'), (-1, 'Blocked'), (-2, 'Failed'), (1, 'In Process'), (2, 'Complete')], default=0)),
                ('visibility', models.IntegerField(choices=[(-1, 'Blocked'), (0, 'Public'), (1, 'Private'), (2, 'Accessible'), (3, 'Restricted')], default=0)),
                ('llm', models.CharField(blank=True, max_length=256, null=True)),
                ('prompt', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('rendered', models.TextField(blank=True, null=True)),
                ('flags', models.JSONField(blank=True, default=dict)),
                ('depends_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.mission')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MissionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('cadence', models.IntegerField(choices=[(0, 'None'), (1, 'Hourly'), (2, 'Daily'), (3, 'Weekly'), (4, 'Biweekly'), (5, 'Monthly')], default=0)),
                ('visibility', models.IntegerField(choices=[(-1, 'Blocked'), (0, 'Public'), (1, 'Private'), (2, 'Accessible'), (3, 'Restricted')], default=0)),
                ('run_at', models.IntegerField(blank=True, null=True)),
                ('base_prompt', models.TextField(blank=True, null=True)),
                ('base_llm', models.CharField(blank=True, max_length=256, null=True)),
                ('flags', models.JSONField(blank=True, default=dict)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.customer')),
                ('depends_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.missioninfo')),
            ],
            options={
                'verbose_name': 'Mission Template',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (-1, 'Inactive')], default=0)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=256, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.customer')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('category', models.IntegerField(choices=[(0, 'Other'), (1, 'Scrape'), (2, 'API'), (3, 'Filter Previous Fetch Tasks'), (10, 'Fetch For LLM'), (11, 'LLM Decision'), (12, 'LLM Report'), (13, 'LLM Question'), (14, 'LLM Evaluation'), (15, 'LLM Rating'), (20, 'Aggregate Previous Tasks'), (21, 'Aggregate Reports'), (30, 'Agent Task'), (40, 'Quantified Report'), (100, 'Finalize Mission'), (1000, 'Post Report')])),
                ('description', models.TextField(blank=True, null=True)),
                ('depends_on_urls', models.JSONField(blank=True, default=list)),
                ('visibility', models.IntegerField(choices=[(-1, 'Blocked'), (0, 'Public'), (1, 'Private'), (2, 'Accessible'), (3, 'Restricted')], default=0)),
                ('order', models.IntegerField(default=0)),
                ('reporting', models.IntegerField(choices=[(0, 'No Report Needed'), (1, 'Key Context For All Reports'), (2, 'Generate Report')], default=0)),
                ('base_url', models.URLField(blank=True, null=True)),
                ('base_llm', models.CharField(blank=True, max_length=256, null=True)),
                ('base_prompt', models.TextField(blank=True, null=True)),
                ('flags', models.JSONField(blank=True, default=dict)),
                ('mission_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.missioninfo')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.taskinfo')),
            ],
            options={
                'verbose_name': 'Task Template',
                'ordering': ['mission_info_id', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('structured_data', models.JSONField(blank=True, default=dict)),
                ('status', models.IntegerField(choices=[(0, 'Created'), (-1, 'Fetch Failed'), (-2, 'No Data'), (-3, 'Rejected'), (-4, 'Hidden'), (1, 'In Process'), (2, 'Complete')], default=0)),
                ('category', models.IntegerField(choices=[(0, 'Other'), (1, 'Scrape'), (2, 'API'), (3, 'Filter Previous Fetch Tasks'), (10, 'Fetch For LLM'), (11, 'LLM Decision'), (12, 'LLM Report'), (13, 'LLM Question'), (14, 'LLM Evaluation'), (15, 'LLM Rating'), (20, 'Aggregate Previous Tasks'), (21, 'Aggregate Reports'), (30, 'Agent Task'), (40, 'Quantified Report'), (100, 'Finalize Mission'), (1000, 'Post Report')])),
                ('reporting', models.IntegerField(choices=[(0, 'No Report Needed'), (1, 'Key Context For All Reports'), (2, 'Generate Report')], default=0)),
                ('order', models.IntegerField(default=0)),
                ('depends_on_urls', models.JSONField(blank=True, default=list)),
                ('visibility', models.IntegerField(choices=[(-1, 'Blocked'), (0, 'Public'), (1, 'Private'), (2, 'Accessible'), (3, 'Restricted')], default=0)),
                ('url', models.URLField(blank=True, null=True)),
                ('llm', models.CharField(blank=True, max_length=256, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('prompt', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('rendered', models.TextField(blank=True, null=True)),
                ('flags', models.JSONField(blank=True, default=dict)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='missions.mission')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.task')),
                ('task_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.taskinfo')),
            ],
            options={
                'ordering': ['mission_id', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('vendor', models.CharField(blank=True, max_length=64, null=True)),
                ('value', encrypted_model_fields.fields.EncryptedCharField()),
                ('refresh', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.customer')),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.integration')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.project')),
            ],
            options={
                'verbose_name': 'Integration Key',
            },
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='missions.task')),
            ],
            options={
                'verbose_name_plural': 'Raw data',
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='missioninfo',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.project'),
        ),
        migrations.CreateModel(
            name='MissionEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('errors', models.JSONField(blank=True, default=dict)),
                ('mission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.mission')),
            ],
            options={
                'verbose_name': 'Mission Evaluation',
            },
        ),
        migrations.AddField(
            model_name='mission',
            name='mission_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.missioninfo'),
        ),
        migrations.AddField(
            model_name='mission',
            name='previous',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='missions.mission'),
        ),
        migrations.AddField(
            model_name='integration',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.project'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(auto_now=True)),
                ('extras', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=256)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='missions.customer')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
